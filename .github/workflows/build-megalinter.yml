---
# Modified from the deploy-BETA-flavors.yml workflow in Megalinter
#
name: "Build & Deploy UCLA Megalinter"
on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Build flavor
    # Set the agent to run on
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Generate the custom flavor Dockerfile
        shell: bash
        run: |
          pip install --upgrade \
            -r megalinter/.config/python/dev/requirements.txt \
            ruamel.yaml \
            megalinter/
          python flavor_generator.py \
            --add-descriptor custom-descriptor/uclahs.megalinter-descriptor.yml

      - name: Docker Metadata action
        uses: docker/metadata-action@v5.6.1
        id: meta
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/bio-megalinter
          flavor: |
            latest=false
            prefix=beta
          tags: |
            type=raw,value=
            type=raw,enable=${{ github.ref == 'refs/heads/main' }},value=dev
            type=ref,enable=${{ github.ref != 'refs/heads/main' }},prefix=branch-,event=branch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Image
        uses: docker/build-push-action@v6
        with:
          context: megalinter
          file: megalinter/flavors/bioinformatics/Dockerfile
          build-args: |
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            BUILD_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            BUILD_REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
